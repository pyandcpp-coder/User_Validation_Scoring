services:
  postgres:
    image: postgres:15
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: scoring_user
      POSTGRES_PASSWORD: scoring_password
      POSTGRES_DB: scoring_db
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"

  weaviate:
    image: cr.weaviate.io/semitechnologies/weaviate:1.24.1
    restart: on-failure:0
    ports:
     - "8080:8080"
     - "50051:50051"
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'multi2vec-clip'
      ENABLE_MODULES: 'multi2vec-clip'
      CLUSTER_HOSTNAME: 'node1'
      CLIP_INFERENCE_API: 'http://multi2vec-clip:8080'

  multi2vec-clip:
    image: cr.weaviate.io/semitechnologies/multi2vec-clip:sentence-transformers-clip-ViT-B-32
    restart: on-failure:0
    environment:
      ENABLE_CUDA: '0'
  # --- APPLICATION SERVICES ---
  api:
    build: .
    command: uvicorn api.main:app --host 0.0.0.0 --port 8000
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis
      - weaviate
    # This block now uses variables from the .env file
    environment:
      - POSTGRES_HOST=postgres
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - WEAVIATE_HOST=${WEAVIATE_HOST}
      - OLLAMA_HOST_URL=${OLLAMA_HOST_URL}

  worker:
    build: .
    command: celery -A celery_worker worker --loglevel=info --pool=solo
    restart: always
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis
      - weaviate
    # This block now uses variables from the .env file
    environment:
      - POSTGRES_HOST=postgres
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - WEAVIATE_HOST=${WEAVIATE_HOST}
      - OLLAMA_HOST_URL=${OLLAMA_HOST_URL}

  # The scheduler service
  beat:
    build: .
    command: celery -A celery_worker beat --loglevel=info
    restart: always
    volumes:
      - .:/app
    depends_on:
      - redis
      - postgres
    # This block now uses variables from the .env file
    environment:
      - POSTGRES_HOST=postgres
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}

volumes:
  postgres_data: